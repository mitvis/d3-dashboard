{"version":3,"sources":["components/FilterCheckboxes.js","components/TweetScatterplot.js","components/App.js","index.js"],"names":["FilterCheckboxes","onChange","e","props","onCheckboxChange","target","name","checked","createCheckboxes","communityColors","selectedCommunities","Object","entries","map","key","value","className","style","htmlFor","type","defaultChecked","has","this","React","Component","d3","window","nbCities","visClusters","visClusterColors","TweetScatterplot","state","context","points","t","width","height","debounceSaveState","debounce","setState","tau","Math","PI","draw","selected","filter","p","g_d5_c10","length","slice","quickselect","a","b","engagement_count","splice","globalAlpha","fillStyle","k","i","d","v","log","beginPath","Number","k20","toFixed","visCluster","arc","x","y","sqrt","fill","quadtree","extent","data","coors","canvas","select","append","attr","node","getContext","addAll","zoomIdentity","call","sel","zoomBehaviour","zoom","on","event","transform","save","clearRect","viewbox","invert","translate","scale","x0","y0","x3","y3","nodes","visit","x1","y1","x2","y2","scanned","push","next","search","restore","prevProps","keys","cluster","cx","cy","r","App","csv","then","domain","range","communityFrequencies","community","console","Set","n","String","selection","add","delete","innerWidth","innerHeight","ReactDOM","render","StrictMode","id","document","getElementById"],"mappings":"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","file":"static/js/main.3f85145d.chunk.js","sourcesContent":["import React from 'react';\n\nclass FilterCheckboxes extends React.Component {\n  onChange = e => {\n    this.props.onCheckboxChange(e.target.name, e.target.checked);\n  }\n\n  createCheckboxes = (communityColors, selectedCommunities) => {\n    return Object.entries(communityColors).map(([key, value]) => {\n      return (<div key={key} className={'filter-checkbox'} style={{\"backgroundColor\": value}}>\n        <label htmlFor={key}>{key}</label>\n        <input\n          type=\"checkbox\"\n          name={key}\n          defaultChecked={selectedCommunities.has(key)}\n          onChange={this.onChange}\n        />\n      </div>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"filter-checkboxes\">\n        <div className={\"filter-checkboxes-label\"}>Communities:</div>\n        {this.createCheckboxes(this.props.communityColors, this.props.selectedCommunities)}\n      </div>\n    );\n  }\n}\n\nexport default FilterCheckboxes;\n","import React from 'react';\nimport { debounce } from 'throttle-debounce';\n\nconst d3 = window.d3;\n\nlet nbCities = 1000; // n biggest cities to draw\n\nconst visClusters = {\n  'k20-2': 'line charts',\n  'k20-4': 'line charts',\n  'k20-13': 'area charts',\n  'k20-16': 'bar charts',\n  'k20-9': 'bar charts',\n  'k40-3': 'pie charts',\n  'k20-0': 'tables',\n  'k20-7': 'tables',\n  'k20-15': 'maps',\n  'k20-11': 'dashboards',\n  'k20-1': 'images w/people',\n};\n\nconst visClusterColors = {\n  'line charts': '#1b9e77',\n  'area charts': '#d95f02',\n  'bar charts': '#7570b3',\n  'pie charts': '#e7298a',\n  'tables': '#66a61e',\n  'maps': '#e6ab02',\n  'dashboards': '#a6761d',\n  'images w/people': '#777777',\n  'null': '#e1e1e1'\n}\n\nclass TweetScatterplot extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      context: null,\n      points: null,\n      t: null\n    }\n  }\n\n  componentDidMount() {\n    const width = this.props.width;\n    const height = this.props.height;\n\n    this.debounceSaveState = debounce(250, (context, points, t) => {\n      this.setState({\n        context, points, t\n      });\n    })\n      \n    const tau = Math.PI * 2;\n\n      // Find the nodes within the specified rectangle.\n    function search(quadtree, x0, y0, x3, y3) {\n      const nodes = []\n      // console.log(quadtree.size());\n      quadtree.visit((node, x1, y1, x2, y2) => {\n        // node.data contient les points Ã  retracer\n        if (!node.length) {\n          do {\n            var d = node.data;\n            d.scanned = true;\n            d.selected = (d.x >= x0) && (d.x < x3) && (d.y >= y0) && (d.y < y3);\n            if (d.selected) nodes.push(d)\n          } while (node = node.next);\n        }\n        return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;\n      });\n      // console.log(nodes);\n      return nodes\n    }\n\n    window.draw = (context, points, t) => {\n      if (this.props.selectedCommunities) {\n        const selected = this.props.selectedCommunities;\n        points = points.filter(p => {\n          return selected.has(p.g_d5_c10)\n        });\n      }\n\n      if (points.length > nbCities) {\n        points = points.slice();\n        d3.quickselect(   // very nice suggestion from https://observablehq.com/@fil Thanks!!\n          points,\n          nbCities,\n          0,\n          points.length - 1,\n          (a, b) => b.engagement_count - a.engagement_count\n        );\n        points.splice(nbCities, points.length - 1)\n      }\n      \n      context.globalAlpha = 0.5;\n      context.fillStyle = 'black';\n      const k = 1 / t.k * 3;\n      for (let i = 0; i < points.length; i++) {\n        const d = points[i],\n          v = Math.log(d.engagement_count) * k;\n        context.beginPath();\n\n        const key = `k20-${Number(d.k20).toFixed(0)}`;\n        const visCluster = visClusters[key] || 'null';\n\n        context.fillStyle = visClusterColors[visCluster];\n\n        context.arc(\n          d.x,\n          d.y,\n          Math.sqrt(v),\n          0,\n          tau\n        ) // Color, size, anything can be changed.\n        context.fill()\n      }\n\n    }\n\n    const zoom = (sel) => {\n      const zoomed = () => {\n        // console.log(\"zoomed?\");\n        const t = d3.event.transform;\n\n        context.save();\n\n        context.clearRect(0, 0, width, height);\n\n        const viewbox = [t.invert([0, 0]), t.invert([width, height])];\n        // console.log(viewbox);\n\n        context.translate(t.x, t.y);\n        context.scale(t.k, t.k);\n        let points = search(\n                quadtree,\n                viewbox[0][0],\n                viewbox[0][1],\n                viewbox[1][0],\n                viewbox[1][1]\n        );\n        window.draw(context, points, t);\n        this.debounceSaveState(context, points, t);\n\n        context.restore();\n      }\n\n      // console.log(\"zoom\");\n\n      const context = sel.node().getContext(\"2d\");\n      const zoomBehaviour = d3.zoom().on(\"zoom\", zoomed);\n      sel.call(zoomBehaviour);\n    }\n\n    var quadtree = d3.quadtree()\n        .extent([[-1, -1], [width + 1, height + 1]])\n        .x(d=> d.x)\n        .y(d=>d.y);\n\n    const data = this.props.data;\n    for(let i = 0; i < data.length; i++) {\n      const coors = coordinate_shift(data[i].x, data[i].y);\n      data[i].x = coors.x;\n      data[i].y = coors.y;\n    }\n\n    function coordinate_shift(x,y) {\n      return {x: x * 40 + width/2, y: y * 40 + height/2}\n    }\n\n    var canvas  = d3.select(\"#chart\").append(\"canvas\")\n      .attr(\"id\", \"canvas\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    canvas = canvas.node();\n\n    var context = canvas.getContext(\"2d\");\n\n    quadtree.addAll(data);\n    window.draw(context, data, d3.zoomIdentity);\n    this.debounceSaveState(context, data, d3.zoomIdentity);\n\n    d3.select(canvas).call(zoom);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      const context = this.state.context;\n      const points = this.state.points;\n      const t = this.state.t;\n  \n      context.save();\n  \n      context.clearRect(0, 0, this.props.width, this.props.height);\n  \n      context.translate(t.x, t.y);\n      context.scale(t.k, t.k);\n      \n      window.draw(context, points, t);\n  \n      context.restore();\n    }  \n    \n  }\n\n  render() {\n    return <div className=\"tweet-scatterplot-legend\">\n      <svg height={200}>\n        {\n          Object.keys(visClusterColors).map((cluster, i) => {\n            return (\n              <g key={cluster}>\n                <circle cx={10} cy={20 * i + 10} r={7} fill={visClusterColors[cluster]} />\n                <text x={20} y={20 * i + 15} fill={visClusterColors[cluster]}>{cluster === 'null' ? 'other' : cluster}</text>\n              </g>\n            )\n          })\n        }\n      </svg>\n    </div>;\n  }\n}\n\nexport default TweetScatterplot;","import React from 'react';\nimport FilterCheckboxes from './FilterCheckboxes';\nimport TweetScatterplot from './TweetScatterplot';\n\nconst d3 = window.d3;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: null,\n      communityColors: null,\n      selectedCommunities: null,\n    };\n  }\n  \n  componentDidMount() {\n    d3.csv(\"https://raw.githubusercontent.com/AnnaAD/d3-dashboard/master/tweet_data.csv\").then((d) => {\n      const communityColors = {};\n\n      const domain = [1, 4, 0, 6, 2, 7, 13, 5, 12, 15, -1];\n      const range = ['#4e79a7','#e15759', '#f28e2c','#76b7b2','#59a14f','#edc949','#af7aa1','#ff9da7','#9c755f','#bab0ab', '#eeeeee'];\n\n      for (let i = 0; i < domain.length; i++) {\n        communityColors[domain[i]] = range[i];\n      }\n\n      //\n      const communityFrequencies = {};\n\n      for(let i = 0; i < d.length; i++) {\n        let community = d[i].g_d5_c10;\n        if (!d[i].g_d5_c10 && d[i].g_d5_c10 !== 0) {\n          community = -1;\n        }\n        community = Number(community).toFixed(0);\n        d[i].g_d5_c10 = community\n        communityFrequencies[community] = communityFrequencies[community] ? communityFrequencies[community] + 1 : 1;\n      }\n\n      console.log(communityFrequencies);\n      //\n\n      this.setState({\n        data: d,\n        communityColors,\n        selectedCommunities: new Set(domain.map(n => String(n)))\n      });\n    });\n  }\n\n  onCheckboxChange(name, checked) {\n    const selection = this.state.selectedCommunities;\n    if (checked) {\n      selection.add(name);\n    }\n    else {\n      selection.delete(name);\n    }\n    this.setState({\n      selectedCommunities: selection\n    })\n  }\n\n  render() {\n    if (!this.state.data) return null;\n    return (\n      <div className=\"App\">\n        <FilterCheckboxes communityColors={this.state.communityColors} selectedCommunities={this.state.selectedCommunities} onCheckboxChange={(a, b) => this.onCheckboxChange(a, b)}></FilterCheckboxes>\n        <TweetScatterplot \n          width={window.innerWidth / 2}\n          height={window.innerHeight}\n          data={this.state.data} \n          communityColors={this.state.communityColors}\n          selectedCommunities={this.state.selectedCommunities}></TweetScatterplot>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"chart\"></div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}